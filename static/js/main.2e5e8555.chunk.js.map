{"version":3,"sources":["Components/Layout/Layout.js","Components/Section/Section.js","Redux/phonebookActions.js","Components/AddContactsForm/AddContactsForm.js","Components/ContactsList/ContactsList.js","Components/ContactFinder/ContactFinder.js","Components/App.js","Redux/phonebookReducer.js","Redux/store.js","index.js"],"names":["Layout","children","Section","title","className","addContact","createAction","item","payload","contact","id","uuidv4","removeContact","findContact","AddForm","state","name","number","handleNameChange","e","setState","target","value","handleNumberChange","handleSubmit","preventDefault","console","log","props","onAddContact","this","onSubmit","type","onChange","required","Component","mapDispatchToProps","phonebookActions","connect","onRemoveContact","phoneboolActions","contacts","items","filter","toLowerCase","includes","map","onClick","onChangeFilter","App","createReducer","action","combineReducers","store","configureStore","reducer","phonebookReducer","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e5e8555.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Layout.css'\r\n\r\nexport default function Layout ({children}) {\r\nreturn (\r\n    <div>{children}</div>\r\n)\r\n}","import React from 'react'\r\nimport './Section.css'\r\n\r\nexport default function Section ({title, children}) {\r\nreturn (\r\n    <section className = 'Section'> {title} {children} </section>\r\n)\r\n}","// ==================Без React Toolkit==================\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import actionTypes from \"./contactsActionTypes\";\r\n\r\n// const addContact = (item) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     contact: {\r\n//       id: uuidv4(),\r\n//       item,\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const removeContact = (contactId) => ({\r\n//   type: actionTypes.REMOVE,\r\n//   payload: {\r\n//     contactId,\r\n//   },\r\n// });\r\n\r\n// const findContact = (filter) => ({\r\n//   type: actionTypes.CHANGE_FILTER,\r\n//   payload: {\r\n//     filter,\r\n//   },\r\n// });\r\n\r\n// // eslint-disable-next-line import/no-anonymous-default-export\r\n// export default { addContact, removeContact, findContact };\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n// import actionTypes from \"./contactsActionTypes\";\r\n\r\nconst addContact = createAction(\"phonebook/add_contact\", (item) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      item,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(\"phonebook/remove_contact\");\r\n\r\nconst findContact = createAction(\"phonebook/find_contact\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, removeContact, findContact };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookActions from \"../../Redux/phonebookActions\";\r\nimport \"./AddContactsForm.css\";\r\n\r\nclass AddForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumberChange = (e) => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"AddContactsForm\">\r\n        <label>\r\n          Name{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleNameChange}\r\n            className=\"AddContactsForm__Name\"\r\n            name=\"name\"\r\n            required\r\n          ></input>\r\n        </label>\r\n\r\n        <label>\r\n          Number{\" \"}\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleNumberChange}\r\n            className=\"AddContactsForm__Number\"\r\n            name=\"number\"\r\n            required\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"AddContactsForm__button\">\r\n          {\" \"}\r\n          Add contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: phonebookActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneboolActions from \"../../Redux/phonebookActions\";\r\nimport \"./ContactsList.css\";\r\n\r\nfunction ContactsList({ contacts, onRemoveContact }) {\r\n  return (\r\n    <ul className=\"ContactsList\">\r\n      {contacts.map(({ id, item, name, number }) => (\r\n        <li key={id} className=\"ContactsList--item\">\r\n          <div>\r\n            {item.name}: {item.number}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemoveContact(id)}\r\n            className=\"ContactsListItem-button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items.filter((contact) =>\r\n    contact.item.name\r\n      .toLowerCase()\r\n      .includes(state.contacts.filter.toLowerCase())\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: phoneboolActions.removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ContactFinder.css\";\r\nimport phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nconst ContactFinder = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label className=\"ContactFinder\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        className=\"ContactFinder-input\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: phonebookActions.findContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFinder);\r\n","import React, { Component } from \"react\";\nimport Layout from \"./Layout/Layout\";\nimport Section from \"./Section/Section\";\nimport AddContactsForm from \"./AddContactsForm/AddContactsForm\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport ContactFinder from \"./ContactFinder/ContactFinder\";\n\nexport default class App extends Component {\n  // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n\n  //   if (persistedContacts) {\n  //     this.setState({\n  //       contacts: JSON.parse(persistedContacts),\n  //     });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <Layout>\n        <Section title=\"Phonebook\">\n          <AddContactsForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <ContactFinder />\n          <ContactsList />\n        </Section>\n      </Layout>\n    );\n  }\n}\n","// ==================Без React Toolkit==================\r\n// import { combineReducers } from \"redux\";\r\n// import actionTypes from \"./contactsActionTypes\";\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       return [...state, payload.contact];\r\n\r\n//     case actionTypes.REMOVE:\r\n//       return state.filter((contact) => contact.id !== payload.contactId);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.CHANGE_FILTER:\r\n//       return payload.filter;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// });\r\n\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport phonebookActions from \"./phonebookActions\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [phonebookActions.addContact]: addContact,\r\n  [phonebookActions.removeContact]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [phonebookActions.findContact]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// ==================Без React Toolkit==================\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import phonebookReducer from \"./phonebookReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport phonebookReducer from \"./phonebookReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}